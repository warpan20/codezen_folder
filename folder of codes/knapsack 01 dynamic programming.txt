
int knapsack(int* weights, int* values, int n, int maxWeight){
   //i gues we have to use some dynamic programming to solve this problem
    //what is the state we should consider
    int dp[n+1][maxWeight+1];//dp[0][] menas no item is there
    //and dp[][0] means no weight is left to be considered
    for(int i=0;i<n+1;i++)
        for(int w=0;w<maxWeight +1;w++ ){
            if(i==0 || w == 0)
                dp[i][w] = 0;
            else if(w>= weights[i-1]) //w and i in dp staritng 1 but i in values staritng 0
                dp[i][w] = max(values[i-1] + dp[i-1][w - weights[i-1]], dp[i-1][w]);
            else
                dp[i][w] = dp[i-1][w];
            
            
            
            
            
            
        }
    return dp[n][maxWeight];
   

}
